
package hu.distributeddocumentor.gui;

import hu.distributeddocumentor.controller.SnippetListModel;
import hu.distributeddocumentor.model.Documentation;
import hu.distributeddocumentor.model.Snippet;
import hu.distributeddocumentor.utils.StringUtils;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.TransferHandler;


public class SnippetManagerPanel extends javax.swing.JPanel {
    
    private final PageEditorHost host;
    private final Documentation doc;
    private final SnippetListModel snippetModel;

    /**
     * Creates new form SnippetManagerPanel
     */
    public SnippetManagerPanel(PageEditorHost host, Documentation doc) {
        
        this.host = host;
        this.doc = doc;
        
        initComponents();      
        
        snippetModel = new SnippetListModel(doc);
        
        snippetList.setModel(snippetModel);
        snippetList.setTransferHandler(
        new TransferHandler() {

            @Override
            protected Transferable createTransferable(JComponent jc) {

                JList list = (JList)jc;
                String item = (String)list.getSelectedValue();

                return new StringSelection("[Snippet:" + StringUtils.convertSpaces(item) + "]");
            }

            @Override
            public int getSourceActions(JComponent jc) {
                return LINK;
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btRemove = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        snippetList = new javax.swing.JList();

        btRemove.setText("Remove");
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        btAdd.setText("Add...");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        snippetList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        snippetList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                snippetListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(snippetList);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(btAdd)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                .add(btRemove))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btAdd)
                    .add(btRemove)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed

        String name = (String) snippetList.getSelectedValue();
        doc.removeSnippet(name);

    }//GEN-LAST:event_btRemoveActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed

       CreateNewPageDialog dlg = new CreateNewPageDialog(null, true, doc, "");
       dlg.setVisible(true);
       
       if (dlg.getReturnStatus() == CreateNewPageDialog.RET_OK) {
           
           try {
            Snippet snippet = new Snippet(dlg.getID(), doc);
            doc.addSnippet(snippet);
           }
           catch (Exception ex) {
               ErrorDialog.show(null, "Failed to add new snippet", ex);
           }
       }
    }//GEN-LAST:event_btAddActionPerformed

    private void snippetListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snippetListMouseClicked
        
        if (evt.getClickCount() == 2) {
            
            int index = snippetList.locationToIndex(evt.getPoint());
            String id = (String) snippetModel.getElementAt(index);
            
            host.openOrFocusSnippet(id);
        }        
    }//GEN-LAST:event_snippetListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList snippetList;
    // End of variables declaration//GEN-END:variables
}
