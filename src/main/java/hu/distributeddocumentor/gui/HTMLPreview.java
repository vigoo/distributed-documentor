package hu.distributeddocumentor.gui;

import hu.distributeddocumentor.controller.HtmlPreviewRendererContext;
import hu.distributeddocumentor.model.Page;
import java.awt.BorderLayout;
import java.io.File;
import java.util.Observable;
import java.util.Observer;
import org.lobobrowser.html.HtmlRendererContext;
import org.lobobrowser.html.UserAgentContext;
import org.lobobrowser.html.gui.HtmlPanel;
import org.lobobrowser.html.test.SimpleUserAgentContext;

public class HTMLPreview extends javax.swing.JPanel implements Observer {

    private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(HTMLPreview.class.getName());
    private final Page page;
    private final File root;
    private final HtmlPanel htmlPanel;
    private final UserAgentContext ucontext;
    private final HtmlRendererContext context;
    
    
    /**
     * Creates new form HTMLPreview
     */
    public HTMLPreview(Page page, PageEditorHost host, File root) {
        initComponents();
        
        this.page = page;
        this.root = root;
        
        htmlPanel = new HtmlPanel();               
        htmlPanel.setVisible(true);        
                
        add(htmlPanel, BorderLayout.CENTER);
        
        ucontext = new SimpleUserAgentContext();
        context = new HtmlPreviewRendererContext(htmlPanel, ucontext, root.toURI(), host);
        
        page.addObserver(this);
        
        renderPage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        renderPage();
    }//GEN-LAST:event_formComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    private void renderPage() {
        // Getting the HTML representation of the page
        String html = page.asHTMLembeddingCSS();
        
        htmlPanel.setHtml(html, root.toURI().toString(), context);
    }

    @Override
    public void update(Observable o, Object o1) {
        renderPage();
    }                    
}
