/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hu.distributeddocumentor.gui;

import hu.distributeddocumentor.model.Documentation;
import hu.distributeddocumentor.model.FailedToLoadMetadataException;
import hu.distributeddocumentor.model.FailedToLoadPageException;
import hu.distributeddocumentor.model.FailedToLoadTOCException;
import hu.distributeddocumentor.model.Page;
import hu.distributeddocumentor.prefs.DocumentorPreferences;
import java.io.IOException;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author vigoo
 */
public class CSSView extends javax.swing.JPanel {
    private final Documentation doc;

    /**
     * Creates new form CSSView
     */
    public CSSView(final Documentation doc, DocumentorPreferences prefs) {
        initComponents();
        
        this.doc = doc;
        
        try {
            String css = new String(Files.readAllBytes(doc.getCustomStylesheet().toPath()), Page.CHARSET);
            editorPane.setText(css);
        } catch (IOException ex) {
            ErrorDialog.show(null, "Failed to load the custom stylesheet", ex);
        }
        
        editorPane.setFont(prefs.getEditorFont());
        
        Document document = editorPane.getDocument();
        document.addDocumentListener(
            new DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent de) {
                    saveStylesheet();
                }

                @Override
                public void removeUpdate(DocumentEvent de) {
                    saveStylesheet();
                }

                @Override
                public void changedUpdate(DocumentEvent de) {
                    saveStylesheet();
                }                        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();

        jScrollPane1.setViewportView(editorPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveStylesheet() {
        try {
            Files.write(doc.getCustomStylesheet().toPath(), editorPane.getDocument().getText(0, editorPane.getDocument().getLength()).getBytes(Page.CHARSET));
            doc.markCustomStylesheetDirty();
        } catch (IOException | FailedToLoadMetadataException | FailedToLoadPageException | FailedToLoadTOCException | BadLocationException ex) {
            ErrorDialog.show(null, "Failed to save the custom stylesheet", ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
